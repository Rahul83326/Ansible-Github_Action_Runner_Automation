- name: Create GitHub Actions runner directory
  file:
    path: "{{ RUNNER_DIR }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Detect system architecture
  set_fact:
    runner_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'x64' }}"

- name: Download GitHub Actions runner (x86_64)
  get_url:
    url: "https://github.com/actions/runner/releases/download/v{{ RUNNER_VERSION }}/actions-runner-linux-x64-{{ RUNNER_VERSION }}.tar.gz"
    dest: "{{ RUNNER_DIR }}/actions-runner.tar.gz"
    mode: '0755'
  when: ansible_architecture == "x86_64"

- name: Download GitHub Actions runner (ARM64)
  get_url:
    url: "https://github.com/actions/runner/releases/download/v{{ RUNNER_VERSION }}/actions-runner-linux-arm64-{{ RUNNER_VERSION }}.tar.gz"
    dest: "{{ RUNNER_DIR }}/actions-runner.tar.gz"
    mode: '0755'
  when: ansible_architecture == "aarch64"

- name: Extract GitHub Actions runner
  unarchive:
    src: "{{ RUNNER_DIR }}/actions-runner.tar.gz"
    dest: "{{ RUNNER_DIR }}"
    remote_src: yes

- name: Configure GitHub Actions runner
  become: no
  command: >
    ./config.sh --url {{REPO_URL}} --token {{ GITHUB_ACTIONS_TOKEN }}
                --name ansible_actions_runner
                --unattended
                --replace
                --tag ansible_actions_runner
  args:
    chdir: "{{ RUNNER_DIR }}"

- name: Install runner as systemd service
  command: ./svc.sh install
  args:
    chdir: "{{ RUNNER_DIR }}"

- name: Start runner as systemd service
  command: ./svc.sh start
  args:
    chdir: "{{ RUNNER_DIR }}"

- name: Check runner service status
  command: ./svc.sh status
  args:
    chdir: "{{ RUNNER_DIR }}"
